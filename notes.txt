More infomation: https://jonmircha.com/git


0. global config 
    git config --global user.name "Tu Nombre"
    git config --global user.email "tu@email.com"
    git config --global core.editor "nombre_del_editor"
    git config --global color.ui true
    git config --global merge.tool "herramienta"

1.- git init
    Initializes a new Git repository in the current directory.

git clone <repository>
    Creates a copy of a remote repository on your local machine.

2.- git add <file>
    Adds a file to the staging area, ready to be committed.

3.- git commit -m "<message>"
    Commits the changes in the staging area with a descriptive message.

4.- git push
    Pushes the committed changes to a remote repository.

5.- git pull
    Fetches and merges the latest changes from a remote repository.

6.- cambiar de rama master
    git branch -m master main 
        Pasa el historial de master a main.

    git push origin main
        crea el origng 

        git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main
        //configuras de manera manual el branch defaul 
        git push orgin --delete master 
            elimina la rama master

7.- local repository status
    git status
        Shows the current status of the repository and any pending changes.

8.- repository log
    q --for out of log
    git log
        Displays the commit history of the repository.

9.- help
    Pedir ayuda
        git commando -h  --terminal
        git help comando --navegador externo

10.- Ignorar archivos 
    formas de ignorar 
        archivo.txt 
        carpeta 
        /archivo.txt 
        *.log (todos con extencion log)
        !prod.log (todos menos este archivo)
        doc/*.txt (todos los archivos txt dentro de una carpeta)
        doc/**/*.txt (ignorar todos los .txt dentro de las subcarpetas doc)

        https://www.toptal.com/developers/gitignore --generar archivos .gitignore   
                                                      dependiendo la tech

11.- Manejo de ramas 
    git checkout rama --cambiar de ramas 
    git checkout -b rama --crea rama y te posiciona 
    git branch rama --crear rama
    git branch -d rama --eliminar
    git push --set-upstream origin html --setea otra rama 
    git push -u origin html

12.- merge 
    situarse en la rama a quedar 
    --fast
    git merge rama1 --merge or join 
    git merge rama2
    git push origin main --push at repository
    
    git branch -d rama1 --delete
    git push origin --delete rama1 --delete in repository
    git branch --no-merged --ramas no fucionadas 

    --manual 
    git merge rama1
        --deciden con que codigo quedarte 
    git add .
    git commit -m 
    git push 

13.- add change to existent commit (before of a push)
    git add     --add changes 
    git commit --amend --no-edit   --add change to existent commit
    git reset --hard HEAD~1 --retroceder en los cambios
    git checkout id_SHA --retroceder en el tiempo

14.- Logs 
    git log --oneline
    git log > commit.txt  --save on a file 
    git log --pretty=format:"%h - %an, %ar : %s" --show log with a format 
    git log -n  --n numero de cambios recientes 
    git log --after="2019-07-07 00:00:00"  --muestra los cambios realizados después de la fecha especificada
    git log --before="2019-07-08 00:00:00" --muestra los cambios realizados antes de la fecha especificada
    git log --oneline --graph --all  --muestra un grafica del historial de cambios (ramas)
    git reflog --muestra datos con acciones hecha en cada commit
    git diff --ver diferencias entre working dir and staging directory area 

15.- reset history  (antes de hacer push)
    git status --estado de proyecto 
    git reset --soft  --borra HEAD
    git reset --mixed --borra HEAD y Staging
    git reset --hard  --borra todo: HEAD, Staging y Working Directory
    git reset id-commit --deshace todos los cmabios despues del commit indicado
    git reset --hard id-commit --desecha todo el historial y regresa al commit especificado

16.- rerset repository 
    -- dirigirse al repositorio 
    --revisar primer link 

17.- Remotos 
    git remote --show origins 
    git remote -v  --more information 
    git remote add nombre_origin link 
    git remote remove nombre_origin --delete 
    git checkout --track -b rama-remota origin/rama-remota --descargar una rama remota a local diferente a la principal

18.- Etiquetas 
    git tag  --show labels 
    git tag n_version  --create label 
    git tag -d n_version  --delete label

    --sincronizando la etiqueta del repositorio local al remoto
        git add .
        git  tag v1.0.0
        git commit -m "v1.0.0"
        git push origin numero-versión
    
    --generando una etiqueta anotada (con mensaje de commit)
        git add .
        git tag -a "v1.0.0" -m "Mensaje de la etiqueta"
        git push --tags

